{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api\";\n\nexport function requestData(query) {\n  const params = {\n    key: \"49503501-671f9af9932bd9ea1fe97a1a7\",\n    q: query,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: \"true\",\n  };\n  return axios\n    .get(\"/\", { params })\n    .then(response => response.data)\n    .catch(error => {\n      console.error(error.message);\n    });\n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nlet lightbox;\n\nexport function renderMarkup(gallery, pictures) {\n  gallery = document.querySelector(\".gallery\");\n  const markup = pictures\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<li class=\"gallery-item\">\n\t                <a class=\"gallery-link\" href=\"${largeImageURL}\">\n\t\t                <img  \n\t\t                class=\"gallery-image\" \n\t\t                src=\"${webformatURL}\" \n\t\t                alt=\"${tags}\" =\n\t\t                />\n\t                </a>\n                    <ul class=\"gallery-list\">\n                      <li class=\"gallery-data\">\n                        Likes\n                        <span class=\"datatext\">${likes}</span>\n                      </li>\n                      <li class=\"gallery-data\">\n                        Views\n                        <span class=\"datatext\">${views}</span>\n                      </li>\n                      <li class=\"gallery-data\">\n                        Comments\n                        <span class=\"datatext\">${comments}</span>\n                      </li>\n                      <li class=\"gallery-data\">\n                        Downloads\n                        <span class=\"datatext\">${downloads}</span>\n                      </li>\n                    </ul>\n                </li>`;\n      }\n    )\n    .join(\"\");\n\n  gallery.insertAdjacentHTML(\"beforeend\", markup);\n\n  lightbox = new SimpleLightbox(\".gallery-link\", {\n    captionsData: \"alt\",\n    captionDelay: 250,\n  });\n  lightbox.refresh();\n}\n","import { requestData } from \"./js/pixabay-api\";\nimport { renderMarkup } from \"./js/render-functions\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  gallery: document.querySelector(\".gallery\"),\n  loader: document.querySelector(\".loader\"),\n};\n\nrefs.form.addEventListener(\"submit\", onSumbit);\n\nfunction onSumbit(event) {\n  event.preventDefault();\n  const form = event.currentTarget;\n\n  if (form.elements[0].value.trim().length === 0) {\n    iziToast.warning({\n      message: \"Sorry, there are no keywords. Please enter them.\",\n      position: \"topRight\",\n    });\n    return;\n  }\n\n  refs.loader.classList.remove(\"hidden\");\n  refs.gallery.innerHTML = \"\";\n  requestData(form.elements[0].value)\n    .then(images => {\n      if (images.hits.length === 0) {\n        iziToast.show({\n          message:\n            \"Sorry, there are no images matching your search query. Please try again!\",\n          messageColor: \"#FAFAFB\",\n          backgroundColor: \"#EF4040\",\n          iconColor: \"#FAFAFB\",\n          iconUrl: \"./img/octagon.svg\",\n          position: \"topRight\",\n          close: false,\n          buttons: [\n            [\n              \"<button>âœ•</button>\",\n              function (instance, toast) {\n                instance.hide({}, toast);\n              },\n            ],\n          ],\n        });\n        return;\n      }\n      renderMarkup(refs.gallery, images.hits);\n    })\n    .catch(error => console.error(error.message))\n    .finally(() => refs.loader.classList.add(\"hidden\"));\n  form.reset();\n}\n"],"names":["axios","requestData","query","params","response","error","lightbox","renderMarkup","gallery","pictures","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","refs","onSumbit","event","form","iziToast","images","instance","toast"],"mappings":"+vBAEAA,EAAM,SAAS,QAAU,0BAElB,SAASC,EAAYC,EAAO,CACjC,MAAMC,EAAS,CACb,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,EACE,OAAOF,EACJ,IAAI,IAAK,CAAE,OAAAG,EAAQ,EACnB,KAAKC,GAAYA,EAAS,IAAI,EAC9B,MAAMC,GAAS,CACd,QAAQ,MAAMA,EAAM,OAAO,CACjC,CAAK,CACL,CCfA,IAAIC,EAEG,SAASC,EAAaC,EAASC,EAAU,CAC9CD,EAAU,SAAS,cAAc,UAAU,EAC3C,MAAME,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,iDACkCL,CAAa;AAAA;AAAA;AAAA,yBAGrCD,CAAY;AAAA,yBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAMoBC,CAAK;AAAA;AAAA;AAAA;AAAA,iDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,iDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,iDAIRC,CAAS;AAAA;AAAA;AAAA,sBAKrD,EACA,KAAK,EAAE,EAEVT,EAAQ,mBAAmB,YAAaE,CAAM,EAE9CJ,EAAW,IAAIY,EAAe,gBAAiB,CAC7C,aAAc,MACd,aAAc,GAClB,CAAG,EACDZ,EAAS,QAAO,CAClB,CClDA,MAAMa,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,QAAS,SAAS,cAAc,UAAU,EAC1C,OAAQ,SAAS,cAAc,SAAS,CAC1C,EAEAA,EAAK,KAAK,iBAAiB,SAAUC,CAAQ,EAE7C,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMC,EAAOD,EAAM,cAEnB,GAAIC,EAAK,SAAS,CAAC,EAAE,MAAM,KAAM,EAAC,SAAW,EAAG,CAC9CC,EAAS,QAAQ,CACf,QAAS,mDACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDJ,EAAK,OAAO,UAAU,OAAO,QAAQ,EACrCA,EAAK,QAAQ,UAAY,GACzBlB,EAAYqB,EAAK,SAAS,CAAC,EAAE,KAAK,EAC/B,KAAKE,GAAU,CACd,GAAIA,EAAO,KAAK,SAAW,EAAG,CAC5BD,EAAS,KAAK,CACZ,QACE,2EACF,aAAc,UACd,gBAAiB,UACjB,UAAW,UACX,QAAS,oBACT,SAAU,WACV,MAAO,GACP,QAAS,CACP,CACE,qBACA,SAAUE,EAAUC,EAAO,CACzBD,EAAS,KAAK,GAAIC,CAAK,CACxB,CACF,CACF,CACX,CAAS,EACD,MACD,CACDnB,EAAaY,EAAK,QAASK,EAAO,IAAI,CAC5C,CAAK,EACA,MAAMnB,GAAS,QAAQ,MAAMA,EAAM,OAAO,CAAC,EAC3C,QAAQ,IAAMc,EAAK,OAAO,UAAU,IAAI,QAAQ,CAAC,EACpDG,EAAK,MAAK,CACZ"}